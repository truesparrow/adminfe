language: node_js

node_js:
- "node"

sudo: required

cache:
  directories:
    - node_modules

services:
  - docker

addons:
  hosts:
    - postgres.truesparrow
    - identity.truesparrow
    - content.truesparrow
    - adminfe.truesparrow

env:
  global:
  - GEMFURY_USER=truesparrow
  # GEMFURY_API_KEY=???
  - secure: "eOJuJAd3pxJxq0TSVdfDZ5dPx7YarxlliHmXnhM1nPS5LpYKxpnjzUIcL9N8OKqzFJFmoSHdV7CQymZ4+poH9vfPWuWiJI916+W5//+LKokVNazxL4ckHhMfhUYtTEhSdLbZ7I3wpWjTUByg6wvWqUoZFSAfvNoRpNY8oPHngsCKPRi7bHpVWH9daWTPPw/51ao3tMGkBjdHak9AOJbefn97L5I1a+wqIABSQ7p6Qb6MbzkGrEyt/WQxjLLoAMKFcs8WWC5aEh3mWHq5mZusVNvamlh1I/U8i6orQeduwAZJGTu/K/CcgWevNar+AD7ttZO2Gaw5WpYMZen5SHYtxr9oqO5pxWaM/1NTJWfsV/AKc28xCudzf3Z6a4LE70HRt2oNmLf/1YN335zDrvKApjDrzPcAg62vUvAp6HaqkyapzBEeUxrVeWtAQ0Gx+cvBk2IzPumMVBucWECkzfOlI2s4EsndV7rkuiqfcVSCUwDbALJAnS3UlVesiGe+tKCHnt/nnkqQh6SWQ1YwFGBBi9JM8Psy0I5sPtoN+cnDSQxrFn+BfqgsHycK95R2hsEZtSQ38XcdJxO0/qDmt8mh4PMQri7ImzetZyOBpMb1F8kP1d1oMkaeW/Rjt7oTVjVzc/eLKAzwYyw88cJHLeOMX5yzJb44zefncoH4ZjvPg00="
  - CYPRESS_baseUrl=http://adminfe.truesparrow:10003
  # CYPRESS_RECORD_KEY
  - secure: "RV2htTIhoj5/OAFLE5z7MRTU62FVNkwjPg7q55xQ/9tCfcH1Aq/K+3bpRW8uGjtCBNX3MN3N1tIxAOpV0akXYowiBjHwQvjqWekP3IPwMIvJOcOmMPP6uDrEg5eiDdKygZ3iPGDdvm32dT5yO0Zxoy3D2eA45pta4Z9SrinyIWwR2Ny/wyTwMMkp6ZZwDANWh1mHZ76m0nEnKvg4hmgr3jyyHjf2LLYdZS2VZqaJW8g01Cby63Zjp+IYtVL/GWv8pVBH+BEXLRqSMZSj7236v0NHoWjCN0zsDVKXtNwpakAo/FeYiDxn7p+5odbq/tQTP3O6gDQCoPsD0mphcHN4wBbHCrr3FrPKNMMjNoWSS71WrmoHU9g0vi0gB3puvkjs1FKJLuFlndBsPdHMcdv5sbWByutFAaXp5xjTPzNknS46IxbcXCVMPrt5iafCTKA3xkCHRAhIPdGrI6xPd3gq+k3HU2PXkJdc37RwhDhAVpPgidQV5x/u3MFNALIHLQIJaZOf3XK3oc3B+TOJLFiOP/pgjIVzXIOvWLY6Y3D7GeyTuXIRTtofIVuDMS5y+96KXK1CO/oqqrFUxzFesoj3FJOSZuwWrP8O7Xv3pc/2uUrjMKeUiMk/6RWV3OaVXK4UUqsYV+TpMY7XP8GMzG/em/HpyK3Bn05E4tzb7Jbl2Oc="

install:
- npm install --registry=https://npm-proxy.fury.io/${GEMFURY_API_KEY}/${GEMFURY_USER}/ --progress=false

before_script:
- psql -c "create database truesparrow;" -U postgres
- psql -c "create user truesparrow with password 'truesparrow';" -U postgres
- psql -c "grant all on database truesparrow to truesparrow;" -U postgres
- openssl aes-256-cbc -K $encrypted_ccbf56b6ca6f_key -iv $encrypted_ccbf56b6ca6f_iv -in config/secrets.tar.enc -out config/secrets.tar -d
- tar xvf config/secrets.tar
- mv env.identity.test config/env.identity
- mv env.content.test config/env.content
- mv env.adminfe.test config/env.adminfe
- mv gcp-ci-builder-key.json config/gcp-ci-builder-key.json
- cat config/gcp-ci-builder-key.json | docker login --username _json_key --password-stdin https://eu.gcr.io;
- docker-compose pull
- docker-compose up -d
- npm run serve-prod &
- sleep 60
- docker-compose logs

script:
- npm run test
- npm run e2e-tests-prod

after_success:
- npm run push-coverage-to-codecov

deploy:
- provider: script
  skip_cleanup: true
  script: $(npm bin)/togemfury --user ${GEMFURY_USER} --api_key ${GEMFURY_API_KEY}
  on:
    tags: true
- provider: script
  skip_cleanup: true
  script:
    cat config/gcp-ci-builder-key.json | docker login --username _json_key --password-stdin https://eu.gcr.io;
    docker build --tag eu.gcr.io/chmsqrt2-truesparrow-common/adminfe:$TRAVIS_TAG .;
    docker push eu.gcr.io/chmsqrt2-truesparrow-common/adminfe:$TRAVIS_TAG;
    docker build --tag eu.gcr.io/chmsqrt2-truesparrow-common/adminfe:latest .;
    docker push eu.gcr.io/chmsqrt2-truesparrow-common/adminfe:latest
  on:
    tags: true
